{"version":3,"sources":["components/Header.js","components/Footer.js","data/servicesList.js","components/Home.js","components/Login.js","components/Register.js","components/Account.js","components/NotFound.js","components/ClassCard.js","components/InHouseServiceCard.js","components/ExternalServiceCard.js","components/Services.js","components/Donate.js","components/ViewEnrolledClasses.js","components/ViewRequestedServices.js","components/ManagerAccount.js","components/ManageServices.js","components/ManageEmployees.js","components/ManageVolunteers.js","components/VolunteerAccount.js","data/usersData.js","data/employeesData.js","data/volunteersData.js","data/classesData.js","data/inHouseServicesData.js","data/externalServicesData.js","App.js","serviceWorker.js","index.js"],"names":["Header","logInElement","this","props","isLoggedIn","react_default","a","createElement","Link","onClick","handleLogOut","to","className","accountElement","id","Component","Footer","servicesList","title","image","description","SectionBanner","backgroundStyle","backgroundImage","service","backgroundRepeat","backgroundPosition","backgroundSize","style","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","cards","map","key","Login","username","password","users","handleLogIn","success","invalidInput","onSubmission","bind","assertThisInitialized","onChange","e","_e$target","target","name","value","setState","defineProperty","_this2","preventDefault","filter","user","toLowerCase","length","Redirect","spanStyle","inputBorder","onSubmit","htmlFor","type","Register","address","email","validName","validUsername","validPassword","validEmail","validAddress","prevState","Account","NotFound","ClassEnrollmentForm","showConfirm","class","isEnrolled","showDetailsHandler","showDetails","enroll","newClass","objectSpread","openSeats","buttons","price","Fragment","startDate","meetings","ClassCard","ClassCard_ClassEnrollmentForm","InHouseRequestForm","madeRequest","quantity","requestSubmitted","handleChange","dateInput","totalPrice","showQuantity","quantityInput","min","step","priceUnit","showDate","InHouseCard","requestMade","InHouseServiceCard_InHouseRequestForm","ExternalRequestForm","format","ExternalCard","ExternalServiceCard_ExternalRequestForm","Services","classes","inHouse","external","course","components_ClassCard","inHouses","serv","InHouseServiceCard","externals","ExternalServiceCard","AMOUNT_PATTERN","RegExp","CARD_NUMBER_PATTERN","EXPIRATION_DATE_PATTERN","SECURITY_CODE_PATTERN","ZIPCODE_PATTERN","Donate","amount","cardNumber","exp","securityCode","zip","amountIsValid","nameIsValid","cardNumberIsValid","expIsValid","securityCodeIsValid","zipIsValid","test","prev","newState","href","pageHeader","donationButton","EnrollmentCard","statusMessage","dropped","ViewEnrolledClasses","enrollmentCards","enrolledClasses","enrollments","classData","enrollment","find","c","ExternalRequestCard","request","status","details","InHouseRequestCard","totalPriceElements","unitPrice","date","ViewRequestedServices","inHouseServices","externalServices","inhouseRequests","externalRequests","inhouseList","req","s","externalList","noInhouseRequests","noExternalRequests","ManagerAccount","PendingRequestCard","ServiceTable","keys","headerRow","dataRow","forEach","push","isReadOnly","readOnly","ManageServices","pendingRequests","EmployeeTable","emp","ManageEmployees","employees","VolunteerTable","ManageVolunteers","volunteers","AssignmentCard","assignment","VolunteerAccount","volunteer","assignments","usersData","employeesData","position","volunteersData","classesData","inHouseServicesData","externalServicesData","App","sessionStorage","getItem","setItem","loggedIn","usr","components_Header","Switch","Route","exact","path","component","render","components_Account","assign","components_ViewEnrolledClasses","components_ViewRequestedServices","components_Donate","components_Login","components_ManageServices","components_ManageEmployees","components_ManageVolunteers","components_Register","components_Services","components_VolunteerAccount","components_Footer","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","basename","concat","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.421a6912.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Contains the rendering components for the header (and navigation) and conditional \r\n * logic that determines if \"account\"/\"log out\" or \"register\"/\"log in\" options should \r\n * be shown.\r\n */\r\nclass Header extends Component {\r\n    render() {\r\n        const logInElement = this.props.isLoggedIn ?\r\n                                    <Link onClick={this.props.handleLogOut} to=\"/\">\r\n                                        <i className=\"fas fa-key\"></i>\r\n                                        <br />Log Out\r\n                                    </Link> :\r\n                                    <Link to=\"/login\">\r\n                                        <i className=\"fas fa-key\"></i>\r\n                                        <br />Log In\r\n                                    </Link>;\r\n        const accountElement = this.props.isLoggedIn ?\r\n                                    <Link to=\"/account\">\r\n                                        <i className=\"far fa-user-circle\"></i>\r\n                                        <br />Account\r\n                                    </Link> :\r\n                                    <Link to=\"/register\">\r\n                                        <i className=\"far fa-user-circle\"></i>\r\n                                        <br />Register\r\n                                    </Link>;\r\n        return (\r\n\r\n            <header>\r\n                <p id=\"logo\"><Link to=\"/\">Community Helper</Link></p>\r\n                <nav>\r\n                <ul className=\"nav-list\">\r\n                    <li><Link to=\"/services\"><i className=\"fas fa-hands-helping\"></i><br />Services</Link></li>\r\n                    <li><Link to=\"/donate\"><i className=\"fas fa-donate\"></i><br />Donate</Link></li>\r\n                    <li>{accountElement}</li>\r\n                    <li>{logInElement}</li>\r\n                </ul>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Contains the rendering components for the footer and conditional logic that\r\n * determines if \"account\"/\"log out\" or \"create account\"/\"log in\" options should \r\n * be shown.\r\n */\r\nclass Footer extends Component {\r\n    render() {\r\n        const logInElement = this.props.isLoggedIn ?\r\n                                    <Link onClick={this.props.handleLogOut} to=\"/\">Log Out</Link> :\r\n                                    <Link to=\"/login\">Log In</Link>;\r\n        const accountElement = this.props.isLoggedIn ?\r\n                                    <Link to=\"/account\">My Account</Link> :\r\n                                    <Link to=\"/register\">Create Account</Link>;\r\n        return (\r\n\r\n            <footer>\r\n                <div>\r\n                    <ul>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                        <li><Link to=\"/services\">Services</Link></li>\r\n                        <li><Link to=\"/donate\">Donate</Link></li>\r\n                    </ul>\r\n                    <ul>\r\n                        <li>{logInElement}</li>\r\n                        <li>{accountElement}</li>\r\n                    </ul>\r\n                </div>\r\n                <p className=\"copyright\">All images were released to public domain and accessed from Pixabay.com</p>\r\n            </footer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","const servicesList = [\r\n    {\r\n        id: 0,\r\n        title: \"Classes\",\r\n        image:\"./images/school-supplies-1581760_640.jpg\",\r\n        description: \"Learn a new skill or hone existing skills with other \" \r\n            + \" in your community.\"\r\n    },{\r\n        id: 1,\r\n        title: \"In-house Services\",\r\n        image:\"./images/aisle-1846114_640.jpg\",\r\n        description: \"Rent our building to host any of your social functions!\"\r\n            + \" Weddings, birthday parties, baby showers, etc.\"\r\n            + \" The possibilities are endless!.\"\r\n            + \" We also provide rentals for equipment and catering.\"\r\n    },{\r\n        id: 2,\r\n        title: \"External Services\",\r\n        image:\"./images/clasped-hands-541849_640.jpg\",\r\n        description: \"We also come to you! We provide home care for those in \" \r\n            + \"need. As well as provide shuttle services.\"\r\n    }\r\n]\r\n\r\n\r\nexport default servicesList;","import React, { Component } from 'react';\r\nimport servicesList from '../data/servicesList.js';\r\n\r\n/**\r\n * Creates a banner block element with the specified  background image, title,\r\n * and description.\r\n * @param {Object} props The object that contains the data for this section.\r\n */\r\nfunction SectionBanner(props) {\r\n    const backgroundStyle = {\r\n        backgroundImage: \"url(\\\"\" + props.service.image + \"\\\")\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"right\", \r\n        backgroundSize: \"contain\"\r\n    }\r\n    return (\r\n        <div className=\"content-card\">\r\n            <h3 style={backgroundStyle}>{props.service.title}</h3>\r\n            <p>{props.service.description}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * Contains the rendering elements for the home page.\r\n */\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            servicesList: servicesList\r\n        };\r\n    }\r\n    \r\n    render() {\r\n        const cards = this.state.servicesList.map(\r\n                service => <SectionBanner key={service.id} service={service} />);\r\n        return (\r\n            <div className=\"landing-style\">\r\n                <div className=\"hero-image\">\r\n                    <h1>Welcome to Community Helper</h1>\r\n                </div>\r\n                <h2>We provide many services to help those in our community by offering a \r\n                    wide range of high quality and affordable services!</h2>\r\n                {cards}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport  { Redirect } from 'react-router-dom'\r\n\r\n/**\r\n * Contains the rendering and logic components for the login page and form.\r\n */\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            users: props.users,\r\n            handleLogIn: props.handleLogIn,\r\n            success: false,\r\n            invalidInput: false\r\n        }\r\n        this.onSubmission = this.onSubmission.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Updates the state to the input's new value.\r\n     * @param {Object} e The object fir the change event.\r\n     */    \r\n    onChange(e) {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });          \r\n        \r\n    }\r\n\r\n    /**\r\n     * Performs credential validation and if a match if found, it will update the \r\n     * state that the user is logged in.\r\n     * @param {Object} e The object for when the form is submitted.\r\n     */\r\n    onSubmission(e) {\r\n        e.preventDefault();\r\n        const match = this.state.users.filter(user =>  \r\n            (user.username.toLowerCase() === this.state.username.toLowerCase()) \r\n            && (user.password === this.state.password)\r\n        );\r\n\r\n        if (match.length > 0) {\r\n            this.setState({success: true});\r\n            this.state.handleLogIn(this.state.username);            \r\n        }else {\r\n            this.setState({invalidInput: true});\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if(this.state.success) {\r\n            return <Redirect to='/account'  />;\r\n        }\r\n        const spanStyle = this.state.invalidInput ? 'error-message' : 'hide-error';\r\n        const inputBorder = this.state.invalidInput ? 'error-border' : '';\r\n        return (\r\n            <main className=\"form-container\">\r\n                <form onSubmit={this.onSubmission}>\r\n                    <h1>Please Login to your account</h1>\r\n                    <div>\r\n                        <label htmlFor=\"username\">Username: </label>\r\n                        <input type=\"text\" name=\"username\" \r\n                            value={this.state.username}\r\n                            onChange={this.onChange}\r\n                            className={inputBorder}\r\n                        />\r\n                        <br />\r\n                        <span className={spanStyle}>Please enter a valid username.</span>\r\n                        <br />\r\n                        <label htmlFor=\"password\">Password: </label>\r\n                        <input type=\"password\" name=\"password\" \r\n                            value={this.state.password}\r\n                            onChange={this.onChange}\r\n                            className={inputBorder}\r\n                        />\r\n                        <br />\r\n                        <span className={spanStyle} >Please enter a matching password.</span>\r\n                        <br />\r\n                    </div>\r\n                    <button type=\"submit\">Log In</button>\r\n                </form>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Contains the logic and rendering elements to support creating a new\r\n * customer account and performs some form validation.\r\n */\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            success: false,\r\n            username: \"\",\r\n            name: \"\",\r\n            password: \"\",\r\n            address: \"\",\r\n            email: \"\",\r\n            validName: true,\r\n            validUsername: true,\r\n            validPassword: true,\r\n            validEmail: true,\r\n            validAddress: true,\r\n            handleLogIn: props.handleLogIn\r\n        }\r\n        this.onSubmission = this.onSubmission.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Updates the state to the input's new value.\r\n     * @param {Object} e The object for the change event.\r\n     */    \r\n    onChange(e) {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });          \r\n        \r\n    }\r\n\r\n    /**\r\n     * Performs form validation and if all is valid, it will update the state\r\n     * that an account was made successfully.\r\n     * @param {Object} e The object for when the form is submitted.\r\n     */\r\n    onSubmission(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState(prevState => {\r\n            let state = {\r\n                validName: (prevState.name.length > 0),\r\n                validUsername: (prevState.username.length > 0),\r\n                validPassword: (prevState.password.length > 0),\r\n                validAddress: (prevState.address.length > 0),\r\n                validEmail: (prevState.email.length > 0)\r\n            }\r\n\r\n            if(state.validName && state.validUsername && state.validPassword \r\n                        && state.validAddress && state.validEmail) {\r\n                state.success = true;\r\n                this.state.handleLogIn(this.state.username);\r\n            }else {\r\n                state.success = false;\r\n            }\r\n            return state;\r\n        });\r\n     }\r\n    render() {\r\n        if(this.state.success) {\r\n            return (\r\n                <main className=\"success-container\">\r\n\r\n                    <h1>Account created successfully!</h1>\r\n                    <p><Link to=\"/login\">Please login to your new account...</Link></p>\r\n                    \r\n                </main> \r\n            )\r\n        }\r\n\r\n        return (\r\n            <main className=\"form-container\">\r\n                <form onSubmit={this.onSubmission}>\r\n                    <h1>Create New Account</h1>\r\n                    <div>\r\n                        <label htmlFor=\"username\">Username: </label>\r\n                        <input type=\"text\" name=\"username\" \r\n                            value={this.state.username}\r\n                            onChange={this.onChange}\r\n                            className={!this.state.validUsername ? 'error-border' : ''} />\r\n                        <br />\r\n                        <span className={!this.state.validUsername ? 'error-message' : 'hide-error'}>Please enter a valid username.</span>\r\n                        <br />\r\n                        <label htmlFor=\"password\">Password: </label>\r\n                        <input type=\"password\" name=\"password\" \r\n                            value={this.state.password}\r\n                            onChange={this.onChange}\r\n                            className={!this.state.validPassword ? 'error-border' : ''} />\r\n                        <br />\r\n                        <span className={!this.state.validPassword ? 'error-message' : 'hide-error'} >Please enter a valid password.</span>\r\n                        <br />\r\n                        <label htmlFor=\"name\">Full Name: </label>\r\n                        <input type=\"text\" name=\"name\" \r\n                            value={this.state.name}\r\n                            onChange={this.onChange}\r\n                            className={!this.state.validName ? 'error-border' : ''} />\r\n                        <br />\r\n                        <span className={!this.state.validName ? 'error-message' : 'hide-error'}>Please enter your full name.</span>\r\n                        <br />\r\n                        <label htmlFor=\"email\">Email: </label>\r\n                        <input type=\"email\" name=\"email\" \r\n                            value={this.state.email}\r\n                            onChange={this.onChange}\r\n                            className={!this.state.validEmail ? 'error-border' : ''} />\r\n                        <br />\r\n                        <span className={!this.state.validEmail ? 'error-message' : 'hide-error'}>Please enter your email.</span>\r\n                        <br />\r\n                        <label htmlFor=\"address\">Address: </label>\r\n                        <input type=\"text\" name=\"address\" \r\n                            value={this.state.address}\r\n                            onChange={this.onChange}\r\n                            className={!this.state.validAddress ? 'error-border' : ''} />\r\n                        <br />\r\n                        <span className={!this.state.validAddress ? 'error-message' : 'hide-error'}>Please enter your address.</span>\r\n                        <br />\r\n                    </div>\r\n                    <button type=\"submit\">Create Account</button>\r\n                </form>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Contains rendering elements for user's account page and with options to \r\n * view more details about their account.\r\n */\r\nclass Account extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoggedIn: props.isLoggedIn,\r\n            user: props.user\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.isLoggedIn) {\r\n            return (\r\n                <main className=\"centered-content\">\r\n                    <h2 className=\"login-message\">Please log in first.</h2>\r\n                </main>\r\n            );\r\n        }\r\n        return (\r\n            <main className=\"centered-content\">\r\n                <h2>Customer Account</h2>\r\n                <h3>Hi {this.state.user.name}!</h3>\r\n                <br />\r\n                <br />\r\n                <Link className=\"heading-button\" to=\"/account/enrolled-classes\">View classes you are enrolled in</Link>\r\n                <Link className=\"heading-button\" to=\"/account/requested-services\">View services you have requested</Link>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Account;","import React from 'react';\r\n\r\n/**\r\n * Returns a simple element used when the page is not found.\r\n */\r\nfunction NotFound() {\r\n    return (\r\n        <h2>404 Page Not Found</h2>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\n\r\n/**\r\n * Contains the logic and rendering elements to display the details of a\r\n * class and allow the user to enroll in that class.\r\n */\r\nclass ClassEnrollmentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showConfirm: false,\r\n            class: props.class,\r\n            isEnrolled: false,\r\n            isLoggedIn: props.isLoggedIn,\r\n            showDetailsHandler: props.showDetails\r\n        }\r\n        this.enroll = this.enroll.bind(this);\r\n        this.showConfirm = this.showConfirm.bind(this);\r\n    }\r\n    /**\r\n     * Sets the state that the user is enrolled in the course.\r\n     */\r\n    enroll() {\r\n        this.setState({isEnrolled: true});\r\n\r\n        this.setState(prevState => {\r\n            let newClass = {...prevState.class};\r\n            newClass.openSeats = newClass.openSeats - 1;\r\n            let newState = {\r\n                class: newClass\r\n            }\r\n\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets the state that the user has clicked the enroll button, and now the\r\n     * confirm and cancel buttons should be shown.\r\n     */\r\n    showConfirm() {\r\n        this.setState(prevState => {\r\n            return {showConfirm: !prevState.showConfirm};\r\n        })\r\n    }\r\n    render() {\r\n        const price = (this.state.class.price === 0.00 ? \"Free\" : \"$\" + this.state.class.price);\r\n        let buttons;\r\n\r\n        if(this.state.isEnrolled) {\r\n            buttons = <p className=\"request-submitted\">Enrolled!</p>\r\n        }else if(this.state.showConfirm) {\r\n            buttons =<> <button onClick={this.showConfirm}>Cancel</button> \r\n                        <button className=\"confirm-button\" onClick={this.enroll}>Confirm</button></>;\r\n        }else {\r\n            buttons = <button className=\"confirm-button\" onClick={this.showConfirm}>Enroll</button>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"fade-out-screen\">\r\n                <div className=\"card-container light-card\">\r\n                    <h3>{this.state.class.title}</h3>\r\n                    <p onClick={this.state.showDetailsHandler}><i className=\"far fa-window-close close-pane\"></i></p>\r\n                    <p>Price: {price}</p>\r\n                    <p>{this.state.class.description}</p>\r\n                    <p>Start Date: {this.state.class.startDate}</p>\r\n                    <p>Class Meetings: {this.state.class.meetings}</p>\r\n                    <p>Openings Remaining: {this.state.class.openSeats}</p>\r\n\r\n                    { this.state.class.price > 0.00 && this.state.isLoggedIn ?\r\n                     <form onSubmit={e => {e.preventDefault()}}>\r\n                        <h4>Payment Information</h4>\r\n                        <div>\r\n                            <label htmlFor=\"name\">Name on card: </label>\r\n                            <input type=\"text\" name=\"name\" />\r\n                            <br />\r\n                            <label htmlFor=\"cardNumber\">Card Number: </label>\r\n                            <input type=\"text\" name=\"cardNumber\" />\r\n                            <br />\r\n                            <label htmlFor=\"exp\">Expiration Date (mm/yy): </label>\r\n                            <input type=\"text\" name=\"exp\" />\r\n                            <br />\r\n                            <label htmlFor=\"securityCode\">Security Code: </label>\r\n                            <input type=\"text\" name=\"securityCode\" />\r\n                            <br />\r\n                            <label htmlFor=\"zip\">Zipcode: </label>\r\n                            <input type=\"text\" name=\"zip\" />\r\n                            <br />\r\n                        </div>\r\n                        <br />\r\n                        {buttons}\r\n                    </form> \r\n\r\n                    : (this.state.isLoggedIn ? buttons : <p className=\"login-message\">Please log in to enroll.</p>)\r\n                    }\r\n                \r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * Contains the logic and rendering components to display the basic information\r\n * of a class offered in a card format.\r\n */\r\nclass ClassCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            class: props.class,\r\n            isLoggedIn: props.isLoggedIn,\r\n            isEnrolled: false,\r\n            showDetails: false\r\n        }\r\n        this.showDetails = this.showDetails.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Sets that state that the details for this class should be shown.\r\n     */\r\n    showDetails() {\r\n        this.setState(prevState => {return {showDetails: !prevState.showDetails} });        \r\n    }\r\n\r\n    render() {\r\n        const price = (this.state.class.price === 0.00 ? \"Free\" : \"$\" + this.state.class.price);\r\n        if(this.state.showDetails) {\r\n            return (\r\n                <ClassEnrollmentForm \r\n                    class={this.state.class} \r\n                    showDetails={this.showDetails} \r\n                    isLoggedIn={this.state.isLoggedIn}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"card-container\">\r\n                <h3>{this.state.class.title}</h3>\r\n                <p>Price: {price}</p>\r\n                <br />\r\n                <button className=\"confirm-button\" onClick={this.showDetails}>View Details</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ClassCard;","import React, { Component } from 'react';\r\n\r\n/**\r\n * Contains the logic and rendering elements to display the details of an\r\n * in-house service and allow the user to rquest that service.\r\n */\r\nclass InHouseRequestForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showConfirm: false,\r\n            service: props.service,\r\n            madeRequest: false,\r\n            isLoggedIn: props.isLoggedIn,\r\n            showDetailsHandler: props.showDetails,\r\n            quantity: 1\r\n        }\r\n        this.requestSubmitted = this.requestSubmitted.bind(this);\r\n        this.showConfirm = this.showConfirm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    /**\r\n     * Updates the state to the input's new value.\r\n     * @param {Object} e The object for the change event.\r\n     */\r\n    handleChange(e) {\r\n        const {name, value} = e.target;\r\n        this.setState({[name]: value});\r\n    }\r\n    /**\r\n     * Sets the state that the user submitted a request.\r\n     */\r\n    requestSubmitted() {\r\n        this.setState({madeRequest: true});\r\n    }\r\n    /**\r\n     * Sets the state that the user has clicked the make request button, and now the\r\n     * confirm and cancel buttons should be shown.\r\n     */    \r\n    showConfirm() {\r\n        this.setState(prevState => {\r\n            return {showConfirm: !prevState.showConfirm};\r\n        })\r\n    }\r\n    render() {\r\n        const price = (this.state.service.price === 0.00 ? \"Free\" : \"$\" + this.state.service.price);\r\n        const dateInput = <>\r\n                            <br />\r\n                            <label htmlFor=\"date\">Select date to reserve: </label>\r\n                            <input name=\"date\" type=\"date\" /> \r\n                            <br /> </>;\r\n\r\n        let totalPrice = 0;\r\n        if(this.state.service.showQuantity) {\r\n            totalPrice = (this.state.service.price === 0.00 ? \"Free\" \r\n                            : \"$\" + (this.state.service.price * this.state.quantity));\r\n        }\r\n        const quantityInput = <>               \r\n                                <br />    \r\n                                <label htmlFor=\"quantity\">Select quantity to reserve:</label>\r\n                                <input  type=\"number\" \r\n                                        min=\"1\" \r\n                                        step=\"1\" \r\n                                        name=\"quantity\" \r\n                                        value={this.state.quantity} \r\n                                        onChange={this.handleChange }/> \r\n                                <p>Total price: {totalPrice}</p>\r\n                                <br />\r\n                            </>;        \r\n\r\n        let buttons;\r\n        if(this.state.madeRequest) {\r\n            buttons = <p className=\"request-submitted\">Request Submitted! We will contact you within the next business day.</p>\r\n        }else if(this.state.showConfirm) {\r\n            buttons =<> <button onClick={this.showConfirm}>Cancel</button>\r\n                         <button className=\"confirm-button\" onClick={this.requestSubmitted}>Confirm</button></>;\r\n        }else {\r\n            buttons = <button className=\"confirm-button\" onClick={this.showConfirm}>Make Request</button>;\r\n        }\r\n        \r\n        \r\n        return (\r\n            <div className=\"fade-out-screen\">\r\n                <div className=\"card-container light-card\">\r\n                    <h3>{this.state.service.title}</h3>\r\n                    <p onClick={this.state.showDetailsHandler}><i className=\"far fa-window-close close-pane\"></i></p>\r\n                    <p>Price: {price} {this.state.service.priceUnit}</p>\r\n                    <p>{this.state.service.description}</p>\r\n                    \r\n                    {this.state.service.showDate && dateInput}\r\n                    {this.state.service.showQuantity && quantityInput}\r\n                    <br />\r\n                    <br />\r\n                    {this.state.isLoggedIn ? buttons : <p className=\"login-message\">Please log in to make request.</p>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Contains the logic and rendering components to display the basic information\r\n * of an in-house service offered in a card format.\r\n */\r\nclass InHouseCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            service: props.service,\r\n            isLoggedIn: props.isLoggedIn,\r\n            requestMade: false,\r\n            showConfirm: false\r\n        }\r\n        this.showDetails = this.showDetails.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Sets that state that the details for this service should be shown.\r\n     */\r\n    showDetails() {\r\n        this.setState(prevState => {return {showDetails: !prevState.showDetails} });        \r\n    }\r\n\r\n    render() {\r\n        const price = (this.state.service.price === 0.00 ? \"Free\" : \"$\" + this.state.service.price);\r\n        if(this.state.showDetails) {\r\n            return (\r\n                <InHouseRequestForm \r\n                    service={this.state.service} \r\n                    showDetails={this.showDetails} \r\n                    isLoggedIn={this.state.isLoggedIn}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"card-container\">\r\n                <h3>{this.state.service.title}</h3>\r\n                <p>Price: {price} {this.state.service.priceUnit}</p>\r\n                <br />\r\n                <button className=\"confirm-button\" onClick={this.showDetails}>View Details</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default InHouseCard;","import React, { Component } from 'react';\r\n\r\n/**\r\n * Contains the logic and rendering elements to display the details of an\r\n * external service and allow the user to rquest that service.\r\n */\r\nclass ExternalRequestForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showConfirm: false,\r\n            service: props.service,\r\n            madeRequest: false,\r\n            isLoggedIn: props.isLoggedIn,\r\n            showDetailsHandler: props.showDetails\r\n        }\r\n        this.requestSubmitted = this.requestSubmitted.bind(this);\r\n        this.showConfirm = this.showConfirm.bind(this);\r\n    }\r\n    /**\r\n     * Sets the state that the user submitted a request.\r\n     */\r\n    requestSubmitted() {\r\n        this.setState({madeRequest: true});\r\n    }\r\n\r\n    /**\r\n     * Sets the state that the user has clicked the make request button, and now the\r\n     * confirm and cancel buttons should be shown.\r\n     */\r\n    showConfirm() {\r\n        this.setState(prevState => {\r\n            return {showConfirm: !prevState.showConfirm};\r\n        })\r\n    }\r\n    render() {\r\n        const input = this.state.service.format === \"date\" ? \r\n                <><label htmlFor=\"date\">Select date to reserve: </label><input name=\"date\" type=\"date\" /> </>\r\n                : <><label htmlFor=\"qty\">Select quantity to reserve:</label> <input type=\"number\" min=\"1\" step=\"1\" name=\"qty\" value=\"1\"/> </> ;\r\n        \r\n        let buttons;\r\n        if(this.state.madeRequest) {\r\n            buttons = <p className=\"request-submitted\">Request Submitted! We will contact you within the next business day.</p>\r\n        }else if(this.state.showConfirm) {\r\n            buttons =<> <button onClick={this.showConfirm}>Cancel</button>\r\n                         <button className=\"confirm-button\" onClick={this.requestSubmitted}>Confirm</button></>;\r\n        }else {\r\n            buttons = <button className=\"confirm-button\" onClick={this.showConfirm}>Make Request</button>;\r\n        }\r\n        \r\n        \r\n        return (\r\n            <div className=\"fade-out-screen\">\r\n                <div className=\"card-container light-card\">\r\n                    <h3>{this.state.service.title}</h3>\r\n                    <p onClick={this.state.showDetailsHandler}><i className=\"far fa-window-close close-pane\"></i></p>\r\n                    <p>{this.state.service.description}</p>\r\n                    <label htmlFor=\"details\">Request details:</label>\r\n                    <br />\r\n                    <textarea name=\"details\"></textarea>\r\n                    <br />\r\n                    <br />\r\n                    {this.state.isLoggedIn ? buttons : <p className=\"login-message\">Please log in to make request.</p>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Contains the logic and rendering components to display the basic information\r\n * of an external service offered in a card format.\r\n */\r\nclass ExternalCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            service: props.service,\r\n            isLoggedIn: props.isLoggedIn,\r\n            showConfirm: false,\r\n            requestMade: false\r\n        }\r\n        this.showDetails = this.showDetails.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Sets that state that the details for this service should be shown.\r\n     */\r\n    showDetails() {\r\n        this.setState(prevState => {return {showDetails: !prevState.showDetails} });        \r\n    }\r\n\r\n    render() {\r\n        if(this.state.showDetails) {\r\n            return (\r\n                <ExternalRequestForm \r\n                    service={this.state.service} \r\n                    showDetails={this.showDetails} \r\n                    isLoggedIn={this.state.isLoggedIn}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"card-container\">\r\n                <h3>{this.state.service.title}</h3>\r\n                <br />\r\n                <button className=\"confirm-button\" onClick={this.showDetails}>View Details</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExternalCard;","import React, { Component } from 'react';\r\nimport ClassCard from './ClassCard.js'\r\nimport InHouseCard from './InHouseServiceCard.js'\r\nimport ExternalCard from './ExternalServiceCard.js'\r\n\r\n/**\r\n * Contains the rendering elements to display a list of cards for all classes,\r\n * in-house services, and external services offered by the organization.\r\n */\r\nclass Services extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: props.isLoggedIn,\r\n            classes: props.classes,\r\n            inHouse: props.inHouse,\r\n            external: props.external\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const classes = this.state.classes.map(course => <ClassCard key={course.id} class={course} isLoggedIn={this.state.isLoggedIn} />);\r\n        const inHouses = this.state.inHouse.map(serv => <InHouseCard key={serv.id} service={serv} isLoggedIn={this.state.isLoggedIn} />);\r\n        const externals = this.state.external.map(serv => <ExternalCard key={serv.id} service={serv} isLoggedIn={this.state.isLoggedIn} />);\r\n        return (\r\n            <main >\r\n                <h1 className=\"header-indent\">Our Services</h1>\r\n                <h2 className=\"header-indent\">Classes</h2>\r\n                <div className=\"card-container-layout\">\r\n                    {classes}\r\n                </div>\r\n                <h2 className=\"header-indent\">Other In-House Services</h2>\r\n                <div className=\"card-container-layout\">\r\n                   {inHouses}\r\n                </div>\r\n                <h2 className=\"header-indent\">External Services</h2>\r\n                <div className=\"card-container-layout\">\r\n                    {externals}\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Services;","import React, { Component } from 'react';\r\n\r\nconst AMOUNT_PATTERN = new RegExp(/^(\\$)?([0-9]+)(\\.([0-9]{1,2}))$/);\r\nconst CARD_NUMBER_PATTERN = new RegExp(/^([0-9]{4}-){3}([0-9]{4})$/);\r\nconst EXPIRATION_DATE_PATTERN = new RegExp(/^[0-9]{2}\\/[0-9]{2}$/);\r\nconst SECURITY_CODE_PATTERN = new RegExp(/^[0-9]{3,4}$/);\r\nconst ZIPCODE_PATTERN = new RegExp(/^[0-9]{5}$/);\r\n\r\n/**\r\n * Contains the logic and rendering elements to support anonymous and \r\n * non-anonymous donations and performs some form validation.\r\n */\r\nclass Donate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: props.isLoggedIn,\r\n            amount: \"$0.00\",\r\n            name: \"\",\r\n            cardNumber: \"\",\r\n            exp: \"\",\r\n            securityCode: \"\",\r\n            zip: \"\",\r\n            amountIsValid: true,\r\n            nameIsValid: true,\r\n            cardNumberIsValid: true,\r\n            expIsValid: true,\r\n            securityCodeIsValid: true,\r\n            zipIsValid: true,\r\n            success: false\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmission = this.onSubmission.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Updates the state to the input's new value.\r\n     * @param {Object} e The object for the change event.\r\n     */\r\n    onChange(e) {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        \r\n        //form validation\r\n        if(name === 'amount') {\r\n            this.setState({amountIsValid: AMOUNT_PATTERN.test(value)});\r\n        }else if (name === 'name') {\r\n            this.setState({nameIsValid: name.length > 0});\r\n        }else if (name === 'cardNumber') {\r\n            this.setState({cardNumberIsValid: CARD_NUMBER_PATTERN.test(value)});\r\n        }else if (name === 'exp') {\r\n            this.setState({expIsValid: EXPIRATION_DATE_PATTERN.test(value)});\r\n        }else if (name === 'securityCode') {\r\n            this.setState({securityCodeIsValid: SECURITY_CODE_PATTERN.test(value)});\r\n        }else if (name === 'zip') {\r\n            this.setState({zipIsValid: ZIPCODE_PATTERN.test(value)});\r\n        }       \r\n    }\r\n\r\n    /**\r\n     * Performs form validation and if all is valid, it will update the state\r\n     * that a donation was made successfully.\r\n     * @param {Object} e The object for when the form is submitted.\r\n     */\r\n    onSubmission(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState(prev => {\r\n            let newState = {\r\n                success: true\r\n            }\r\n\r\n            if(!AMOUNT_PATTERN.test(prev.amount)) {\r\n                newState.success = false;\r\n                newState.amountIsValid = false;\r\n            }\r\n            if(prev.name.length === 0) {\r\n                newState.success = false;\r\n                newState.nameIsValid = false;\r\n            }\r\n            if(!CARD_NUMBER_PATTERN.test(prev.cardNumber)) {\r\n                newState.success = false;\r\n                newState.cardNumberIsValid = false;\r\n            }\r\n            if(!EXPIRATION_DATE_PATTERN.test(prev.exp)) {\r\n                newState.success = false;\r\n                newState.expIsValid = false;\r\n            }\r\n            if(!SECURITY_CODE_PATTERN.test(prev.securityCode)) {\r\n                newState.success = false;\r\n                newState.securityCodeIsValid = false;\r\n            }\r\n            if(!ZIPCODE_PATTERN.test(prev.zip)) {\r\n                newState.success = false;\r\n                newState.zipIsValid = false;\r\n            }\r\n\r\n            return newState;\r\n\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.state.success) {\r\n            return (\r\n                <main className=\"success-container\">\r\n                    <h1>Thank you for your donation!</h1>\r\n                    <p><a href=\"/\">Return to home...</a></p>\r\n                </main> \r\n            )\r\n        }\r\n\r\n        const pageHeader = this.state.isLoggedIn ? \"Make Donation\" : \"Make Anonymous Donation\";\r\n        const donationButton = this.state.isLoggedIn && <button className=\"confirm-button\" type=\"submit\">Make Donation</button>;\r\n        return (\r\n            <main className=\"form-container\">\r\n                <form onSubmit={this.onSubmission}>\r\n                    <h1>{pageHeader}</h1>\r\n                    <div>\r\n                        <label htmlFor=\"amount\">Amount: </label>\r\n                        <input type=\"text\" name=\"amount\" \r\n                            value={this.state.amount}\r\n                            onChange={this.onChange}\r\n                            className={!this.state.amountIsValid ? 'error-border align-right' : 'align-right'} />\r\n                        <br />\r\n                        <span className={!this.state.amountIsValid ? 'error-message' : 'hide-error'}>Please enter a valid amount.</span>\r\n                        <br />\r\n                        <label htmlFor=\"name\">Name on card: </label>\r\n                        <input type=\"text\" name=\"name\" \r\n                            value={this.state.name}\r\n                            onChange={this.onChange}\r\n                            className={!this.state.nameIsValid ? 'error-border' : ''} />\r\n                        <br />\r\n                        <span className={!this.state.nameIsValid ? 'error-message' : 'hide-error'} >Please enter a name.</span>\r\n                        <br />\r\n                        <label htmlFor=\"cardNumber\">Card Number: </label>\r\n                        <input type=\"text\" name=\"cardNumber\" \r\n                            value={this.state.cardNumber}\r\n                            onChange={this.onChange}\r\n                            className={!this.state.cardNumberIsValid ? 'error-border' : ''} />\r\n                        <br />\r\n                        <span className={!this.state.cardNumberIsValid ? 'error-message' : 'hide-error'}>Please enter a valid credit card number.</span>\r\n                        <br />\r\n                        <label htmlFor=\"exp\">Expiration Date (mm/yy): </label>\r\n                        <input type=\"text\" name=\"exp\" \r\n                            value={this.state.exp}\r\n                            onChange={this.onChange}\r\n                            className={!this.state.expIsValid ? 'error-border' : ''} />\r\n                        <br />\r\n                        <span className={!this.state.expIsValid ? 'error-message' : 'hide-error'}>Please enter a valid expiration date.</span>\r\n                        <br />\r\n                        <label htmlFor=\"securityCode\">Security Code: </label>\r\n                        <input type=\"text\" name=\"securityCode\" \r\n                            value={this.state.securityCode}\r\n                            onChange={this.onChange}\r\n                            className={!this.state.securityCodeIsValid ? 'error-border' : ''} />\r\n                        <br />\r\n                        <span className={!this.state.securityCodeIsValid ? 'error-message' : 'hide-error'}>Please enter a valid security code.</span>\r\n                        <br />\r\n                        <label htmlFor=\"zip\">Zipcode: </label>\r\n                        <input type=\"text\" name=\"zip\" \r\n                            value={this.state.zip}\r\n                            onChange={this.onChange}\r\n                            className={!this.state.zipIsValid ? 'error-border' : ''} />\r\n                        <br />\r\n                        <span className={!this.state.zipIsValid ? 'error-message' : 'hide-error'}>Please enter a valid zipcode.</span>\r\n                        <br />\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Make Anonymous Donation</button>\r\n                        {donationButton}\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Donate;","import React, { Component } from 'react';\r\n\r\n/**\r\n * Displays in a card format, the details of a class the user has enrolled in, \r\n * and the status of their enrollment.\r\n * @param {Object} props The data for this class.\r\n */\r\nfunction EnrollmentCard(props) {\r\n    const price = (props.class.price === 0.00 ? \"Free\" : \"$\" + props.class.price);\r\n    const statusMessage = props.dropped ? <p className=\"login-message\">Dropped!</p>\r\n                                    : <p className=\"request-submitted\">Enrolled!</p>\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <h3>{props.class.title}</h3>\r\n            <p>Price: {price}</p>\r\n            <p>{props.class.description}</p>\r\n            <p>Start Date: {props.class.startDate}</p>\r\n            <p>Class Meetings: {props.class.meetings}</p>\r\n            <br />\r\n            {statusMessage}\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * When a user is logged in, it will display a list of cards of the courses\r\n * they have enrolled in.\r\n */\r\nclass ViewEnrolledClasses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: props.isLoggedIn,\r\n            user: props.user,\r\n            classes: props.classes\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if(!this.state.isLoggedIn) {\r\n            return (\r\n                <main className=\"centered-content\">\r\n                    <h2 className=\"login-message\">Please log in first.</h2>\r\n                </main>\r\n            );\r\n        }\r\n\r\n        const enrolledClasses = this.state.user.enrollments;\r\n        const classData = enrolledClasses.map(enrollment => {\r\n            let id = enrollment.id;\r\n            let course = this.state.classes.find(c=> {\r\n                return (c.id === id);\r\n            });\r\n\r\n            return {\r\n                id: enrollment.id, \r\n                class: course, \r\n                dropped: enrollment.dropped\r\n            };\r\n        });\r\n        let enrollmentCards;\r\n        if (enrolledClasses.length === 0) {\r\n            enrollmentCards = <p>You are not currently enrolled in any courses.</p>\r\n        }else {\r\n            enrollmentCards = classData.map(c => <EnrollmentCard key={c.id} class={c.class} dropped={c.dropped} />);\r\n        }\r\n        return (\r\n            <main>\r\n                <h1 className=\"header-indent\">Your Enrolled Classes</h1>\r\n                <div className=\"card-container-layout\">\r\n                    {enrollmentCards}\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ViewEnrolledClasses;","import React, { Component } from 'react';\r\n\r\n/**\r\n * Displays in a card format, the details of an external service the user has \r\n * requested and the status of their request.\r\n * @param {Object} props The data for this service.\r\n */\r\nfunction ExternalRequestCard(props) {\r\n    let statusMessage;\r\n    if(props.request.status === 'Accepted!') {\r\n        statusMessage = <p className=\"request-submitted\">{props.request.status}</p>\r\n    }else {\r\n        statusMessage = <p className=\"login-message\">{props.request.status}</p>\r\n    }\r\n    \r\n    return (\r\n        <div className=\"card-container\">\r\n            <h3>{props.service.title}</h3>\r\n            <p>{props.service.description}</p>\r\n            <br />\r\n            <p>Request Details:</p>\r\n            <p>{props.request.details}</p>\r\n            <br />\r\n            {statusMessage}\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * Displays in a card format, the details of an in-house service the user has \r\n * requested and the status of their request.\r\n * @param {Object} props The data for this service.\r\n */\r\nfunction InHouseRequestCard(props) {\r\n    const unitPrice = (props.service.price === 0.00 ? \"Free\" : \"$\" + props.service.price);\r\n    let totalPriceElements;\r\n\r\n    if(props.service.showQuantity) {\r\n        let totalPrice = (props.service.price === 0.00 ? \"Free\" : \"$\" + (props.service.price * props.request.quantity));\r\n        totalPriceElements = <>\r\n                                <p>Requested Quantity: {props.request.quantity}</p>\r\n                                <p>Total Price: {totalPrice}</p>\r\n                            </>\r\n    }\r\n\r\n    let statusMessage;\r\n    if(props.request.status === 'Accepted!') {\r\n        statusMessage = <p className=\"request-submitted\">{props.request.status}</p>\r\n    }else {\r\n        statusMessage = <p className=\"login-message\">{props.request.status}</p>\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <h3>{props.service.title}</h3>\r\n            <p>{props.service.description}</p>\r\n            <p>Date Requested: {props.request.date}</p>\r\n            <p>Price: {unitPrice} {props.service.priceUnit}</p>\r\n            {props.service.showQuantity && totalPriceElements}\r\n\r\n            <br />\r\n            {statusMessage}\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * When a user is logged in, it will display a list of cards of the services,\r\n * in-house and external, they have requested.\r\n */\r\nclass ViewRequestedServices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: props.isLoggedIn,\r\n            user: props.user,\r\n            inHouse: props.inHouseServices,\r\n            external: props.externalServices\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.isLoggedIn) {\r\n            return (\r\n                <main className=\"centered-content\">\r\n                    <h2 className=\"login-message\">Please log in first.</h2>\r\n                </main>\r\n            );\r\n        }\r\n\r\n        const inhouseRequests = this.state.user.inhouseRequests;\r\n        const externalRequests = this.state.user.externalRequests;\r\n\r\n        const inhouseList = inhouseRequests.map(req => {\r\n            let service = this.state.inHouse.find(s=> {\r\n                return (s.id === req.id);\r\n            });\r\n\r\n            return <InHouseRequestCard key={req.id} service={service} request={req} />;\r\n        });\r\n\r\n        const externalList = externalRequests.map(req => {\r\n            let service = this.state.external.find(s=> {\r\n                return (s.id === req.id);\r\n            });\r\n\r\n            return <ExternalRequestCard key={req.id} service={service} request={req} />;\r\n        });\r\n\r\n        const noInhouseRequests = <p>You do not currently have any requests for in-house services.</p>;\r\n        const noExternalRequests = <p>You do not currently have any requests for external services.</p>;\r\n\r\n        return (\r\n            <main>\r\n                <h1 className=\"header-indent\">Your Requests</h1>\r\n                <h2 className=\"header-indent\">In-House Requests</h2>\r\n                <div className=\"card-container-layout\">\r\n                    {inhouseList.length > 0 ? inhouseList : noInhouseRequests}\r\n                </div>\r\n                <h2 className=\"header-indent\">External Requests</h2>\r\n                <div className=\"card-container-layout\">\r\n                    {externalList.length > 0 ? externalList : noExternalRequests}\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ViewRequestedServices;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Renders the manager's account page with links to other pages to manage the actual\r\n * resources.\r\n */\r\nfunction ManagerAccount() {\r\n    return (\r\n        <main className=\"centered-content\">\r\n            <h2>Manager Account</h2>\r\n            <br />\r\n            <br />\r\n\r\n            <Link className=\"heading-button\" to=\"/manager-account/manage-services\">Manage Services</Link>\r\n            <Link className=\"heading-button\" to=\"/manager-account/manage-employees\">Manage Employees</Link>\r\n            <Link className=\"heading-button\" to=\"/manager-account/manage-volunteers\">Manage Volunteers</Link>\r\n        </main>\r\n    )\r\n    \r\n}\r\n\r\nexport default ManagerAccount;","import React, { Component } from 'react';\r\n\r\n\r\n/**\r\n * Creates a card element for this pending request data.\r\n * @param {Object} props The data for the pending request.\r\n */\r\nfunction PendingRequestCard(props) {\r\n    return(\r\n        <div className=\"card-container centered-content\">\r\n            <h3>{props.req.title}</h3>\r\n            <button>View Details</button>\r\n            <br />\r\n            <br />\r\n            <button>Reject Request</button>\r\n            <button className=\"confirm-button\">Approve Request</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * Creates a table element for this service's data.\r\n * @param {Object} props The data for the service.\r\n */\r\nfunction ServiceTable(props) {\r\n    const keys = Object.keys(props.service);\r\n    let headerRow = [];\r\n    let dataRow = [];\r\n    keys.forEach(key => {\r\n        headerRow.push(<th>{key}</th>);\r\n        let value = props.service[key];\r\n        let isReadOnly;\r\n        props.isReadOnly ? isReadOnly=\"readonly\" : isReadOnly=\"\";\r\n        dataRow.push(<td><input type=\"text\" value={value} readOnly={isReadOnly}/></td>);\r\n\r\n    });\r\n\r\n    return(\r\n        <div className=\"card-container make-scrollable\">\r\n            <h3>Service Type: {props.type}</h3>\r\n            <br />\r\n            <table>\r\n                <tr>\r\n                    {headerRow}\r\n                </tr>\r\n                <tr>\r\n                    {dataRow}\r\n                </tr>\r\n            </table>\r\n            <br />\r\n            <button>Modify Service</button>\r\n            <button>Delete Service</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * Contains the rendering and logic components to display a list of pending\r\n * request cards and services in a table format.\r\n */\r\nclass ManageServices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classes: props.classes,\r\n            inHouse: props.inHouse,\r\n            external: props.external\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const pendingRequests = this.state.inHouse.map(req => <PendingRequestCard key={req.id} req={req} />);\r\n        const classes = this.state.classes.map(c => <ServiceTable key={c.id} service={c} isReadOnly={true} type=\"Class\"/>);\r\n        const inHouses = this.state.inHouse.map(s => <ServiceTable key={s.id} service={s} isReadOnly={true} type=\"In-House\"/>);\r\n        const externals = this.state.external.map(s => <ServiceTable key={s.id} service={s} isReadOnly={true} type=\"External\"/>);\r\n        return (\r\n            <main >\r\n                <h1 className=\"header-indent\">Manage Services</h1>\r\n                <h2 className=\"header-indent\">Pending Requests</h2>\r\n                <div className=\"card-container-layout\">\r\n                    {pendingRequests}\r\n                </div>\r\n                <button className=\"confirm-button heading-button\">Add New Service</button>\r\n                <h2 className=\"header-indent\">Existing Services</h2>\r\n                <div className=\"table-container\">\r\n                    {classes}\r\n                    {inHouses}\r\n                    {externals}\r\n                </div>\r\n            </main>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManageServices;","import React, { Component } from 'react';\r\n\r\n\r\n/**\r\n * Creates a table element for this employee's data.\r\n * @param {Object} props The data for the employee.\r\n */\r\nfunction EmployeeTable(props) {\r\n    const keys = Object.keys(props.emp);\r\n    let headerRow = [];\r\n    let dataRow = [];\r\n    keys.forEach(key => {\r\n        headerRow.push(<th>{key}</th>);\r\n        let value = props.emp[key];\r\n        let isReadOnly;\r\n        props.isReadOnly ? isReadOnly=\"readonly\" : isReadOnly=\"\";\r\n        dataRow.push(<td><input type=\"text\" value={value} readOnly={isReadOnly}/></td>);\r\n\r\n    });\r\n\r\n    return(\r\n        <div className=\"card-container make-scrollable\">\r\n            <table>\r\n                <tr>\r\n                    {headerRow}\r\n                </tr>\r\n                <tr>\r\n                    {dataRow}\r\n                </tr>\r\n            </table>\r\n            <br />\r\n            <button>Modify Employee</button>\r\n            <button>Delete Employee</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * Contains the rendering and logic components to display a list of employees.\r\n */\r\nclass ManageEmployees extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: props.employees,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const employees = this.state.employees.map(e => <EmployeeTable key={e.id} emp={e} isReadOnly={true} />);\r\n      return (\r\n            <main >\r\n                <h1 className=\"header-indent\">Manage Employees</h1>\r\n                <button className=\"confirm-button heading-button\">Add New Employee</button>\r\n                <h2 className=\"header-indent\">Current Employees</h2>\r\n                <div className=\"table-container\">\r\n                    {employees}\r\n                </div>\r\n            </main>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManageEmployees;","import React, { Component } from 'react';\r\n\r\n/**\r\n * Creates a table element for this volunteer's data.\r\n * @param {Object} props The data for this volunteer.\r\n */\r\nfunction VolunteerTable(props) {\r\n    const keys = Object.keys(props.service);\r\n    let headerRow = [];\r\n    let dataRow = [];\r\n    keys.forEach(key => {\r\n        headerRow.push(<th>{key}</th>);\r\n        let value = props.service[key];\r\n        let isReadOnly;\r\n        props.isReadOnly ? isReadOnly=\"readonly\" : isReadOnly=\"\";\r\n        dataRow.push(<td><input type=\"text\" value={value} readOnly={isReadOnly}/></td>);\r\n\r\n    });\r\n\r\n    return(\r\n        <div className=\"card-container make-scrollable\">\r\n            <table>\r\n                <tr>\r\n                    {headerRow}\r\n                </tr>\r\n                <tr>\r\n                    {dataRow}\r\n                </tr>\r\n            </table>\r\n            <br />\r\n            <button>Modify Volunteer</button>\r\n            <button>Delete Volunteer</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * Contains the rendering and logic components to display a list of volunteers.\r\n */\r\nclass ManageVolunteers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            volunteers: props.volunteers,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const volunteers = this.state.volunteers.map(e => <VolunteerTable key={e.id} service={e} isReadOnly={true} />);\r\n      return (\r\n            <main >\r\n                <h1 className=\"header-indent\">Manage Volunteer</h1>\r\n                <button className=\"confirm-button heading-button\">Add New Volunteer</button>\r\n                <h2 className=\"header-indent\">Current Volunteer</h2>\r\n                <div className=\"table-container\">\r\n                    {volunteers}\r\n                </div>\r\n            </main>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManageVolunteers;","import React, { Component } from 'react';\r\n\r\n/**\r\n * Displays the information for a service the volunteer is assigned to.\r\n */\r\nfunction AssignmentCard(props) {\r\n    return(\r\n        <div className=\"card-container centered-content\">\r\n            <h3>{props.assignment}</h3>\r\n            <button>View Details</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n/**\r\n * contains the rendering elements for a volunteer's account page.\r\n */\r\nclass VolunteerAccount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            volunteer: props.volunteer\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const assignments = this.state.volunteer.assignments.map(s => <AssignmentCard key={s} assignment={s} />);\r\n        return (\r\n            <main>\r\n                <h1 className=\"header-indent\">Volunteering Assignments</h1>\r\n                <h2 className=\"header-indent\">{this.state.volunteer.name}, you have been assigned to the following services:</h2>\r\n                <div className=\"card-container-layout\">\r\n                    {assignments}\r\n                </div>\r\n              </main>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default VolunteerAccount;","const usersData = [\r\n    {\r\n        username: \"jdoe\",\r\n        password: \"pass1\",\r\n        name: \"Jane\",\r\n        enrollments: [\r\n            {id: \"c0\", dropped: false},\r\n            {id: \"c2\", dropped: true}\r\n        ],\r\n        inhouseRequests: [\r\n            {id: \"i0\", date:\"4/15/2019\", status:\"Accepted!\"},\r\n            {id: \"i2\", date:\"4/15/2019\", quantity: 25, status:\"Pending!\"},\r\n            {id: \"i3\", date:\"5/25/2019\", quantity: 1, status:\"Cancelled!\"}\r\n        ],\r\n        externalRequests: [\r\n            {\r\n                id: \"e0\", \r\n                status: \"Pending!\",\r\n                details: \"My elderly aunt now needs assistance with housekeeping and companionship. \"\r\n                    + \"I'm looking for someone to go to her house 2 or 3 times a week. What would this cost?\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        username: \"jSmith\",\r\n        password: \"pass2\",\r\n        name: \"John\",  \r\n        enrollments: [ ],\r\n        inhouseRequests: [ ],\r\n        externalRequests: [ ]\r\n    }\r\n]\r\n\r\n\r\nexport default usersData;","const employeesData = [\r\n    {\r\n        name: \"Jack Smith\",\r\n        position: \"Manager\"\r\n    },{\r\n        name: \"Elizabeth Vargas\",\r\n        position: \"Employee\"\r\n    }\r\n]\r\n\r\nexport default employeesData;","const volunteersData = [\r\n    {\r\n        name: \"Bob Jones\",\r\n        assignments: [\"Beginner Spanish\",\"Arts and Crafts\", \"Catering\"]\r\n    },{\r\n        name: \"Catarina Miller\",\r\n        assignments: \"Arts and Crafts\"\r\n    }\r\n]\r\n\r\nexport default volunteersData;","const classesData = [\r\n    {\r\n        id: \"c0\",\r\n        title: \"Beginner Spanish\",\r\n        description: \"In this 16 week course, we go over the basics of Latin \" +\r\n                    \"American Spanish. The course will cover basic vocabulary and grammar.\",\r\n        startDate: \"April 5, 2019\",\r\n        meetings: \"Fridays from 6:00pm to 9:00pm\",\r\n        openSeats: 10,\r\n        price: 0.00\r\n    },{\r\n        id: \"c1\",\r\n        title: \"Arts and Crafts\",\r\n        description: \"In this 8 week course, we work on a variety of arts and crafts projects. \" +\r\n                    \"We cover crochet, knitting, paper crafts, and many more.\",\r\n        startDate: \"May 4, 2019\",\r\n        meetings: \"Saturdays and Sundays from 10:00am to 12:00pm\",\r\n        openSeats: 5,\r\n        price: 50.00\r\n    },{\r\n        id: \"c2\",\r\n        title: \"Landscape Painting\",\r\n        description: \"In this single day workshop we will use acrylic paints to create a landscape\" +\r\n                    \" chosen by a local popular artist.\",\r\n        startDate: \"March 25, 2019\",\r\n        meetings: \"March 25th from 10:00am to 6:00pm\",\r\n        openSeats: 2,\r\n        price: 25.00\r\n    },\r\n\r\n]\r\n\r\n\r\nexport default classesData;","const inHouseServicesData = [\r\n    {\r\n        id: \"i0\",\r\n        title:\"Building Rental\",\r\n        description:\"Do you have an upcoming event that needs to be held in a large\"\r\n                + \" open space? Our org's building is the perfect place to host your \"\r\n                + \" get togethers with friends and family. Weddings, baby showers, brithday parties, etc.\",\r\n        price: 100.00,\r\n        priceUnit: \"for the day\",\r\n        showDate: true,\r\n        showQuantity: false\r\n\r\n    },{\r\n        id: \"i1\",\r\n        title:\"Chairs and Tables Rental\",\r\n        description:\"Do you need tables and chairs for your upcoming event? Our org \" \r\n                + \"allows you to rent the charis and tables from us as well. \"\r\n                + \"Each table comes with 5 chairs.\",\r\n        price: 5.00,\r\n        priceUnit: \"per table and chairs set\",  \r\n        showDate: true,\r\n        showQuantity: true     \r\n    },{\r\n        id: \"i2\",\r\n        title:\"Catering Reservation\",\r\n        description:\"We offer catering services to those hosting events in our building.\",\r\n        price: 10.00,\r\n        priceUnit: \"per person served\",  \r\n        showDate: true,\r\n        showQuantity: true \r\n    },{\r\n        id:\"i3\",\r\n        title:\"Lighting Equipment Rental\",\r\n        description:\"Do you need special lighting for your event? At BCS, we offer \"\r\n                    + \"near professional level lighting sets to help set the right mood for your event.\",\r\n        price: 0.00,\r\n        priceUnit: \"per lighting set\",  \r\n        showDate: true,\r\n        showQuantity: true\r\n    }\r\n]\r\n\r\nexport default inHouseServicesData;","const externalServicesData = [\r\n    {\r\n        id: \"e0\",\r\n        title:\"Home care for the elderly and handicapped\",\r\n        description:\"We provide home care for those in need. This includes companionship, \"\r\n                + \"housekeeping, physical assistance, and help with hygiene. \"\r\n                + \"Please make a request today and we will contact you back with \"\r\n                + \"an estimate and more information.\"\r\n    },{\r\n        id: \"e1\",\r\n        title:\"Shuttle Services\",\r\n        description:\"At BCS, we provide shuttle services to help those in need \"\r\n                + \"get from place A to B. Please make a request and we will \"\r\n                + \"get back to you with an estimate.\"\r\n    },\r\n\r\n\r\n]\r\n\r\nexport default externalServicesData;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './styles/header-footer.css';\r\nimport './styles/style.css';\r\nimport './styles/landing.css';\r\n\r\nimport Header from './components/Header.js';\r\nimport Footer from './components/Footer.js';\r\nimport Home from './components/Home.js';\r\nimport Login from './components/Login.js';\r\nimport Register from './components/Register.js';\r\nimport Account from './components/Account.js';\r\nimport NotFound from './components/NotFound.js';\r\nimport Services from './components/Services.js';\r\nimport Donate from './components/Donate.js';\r\nimport ViewEnrolledClasses from './components/ViewEnrolledClasses.js';\r\nimport ViewRequestedServices from './components/ViewRequestedServices.js';\r\nimport ManagerAccount from './components/ManagerAccount.js';\r\nimport ManageServices from './components/ManageServices.js';\r\nimport ManageEmployees from './components/ManageEmployees.js';\r\nimport ManageVolunteers from './components/ManageVolunteers.js';\r\nimport VolunteerAccount from './components/VolunteerAccount.js';\r\n\r\nimport usersData from './data/usersData.js';\r\nimport employeesData from './data/employeesData.js';\r\nimport volunteersData from './data/volunteersData.js';\r\nimport classesData from './data/classesData.js';\r\nimport inHouseServicesData from './data/inHouseServicesData.js';\r\nimport externalServicesData from './data/externalServicesData.js';\r\n\r\n\r\n/**\r\n * Contains the routing for the application and assemblies the set of components\r\n * to display (i.e. The Header, the content, Footer), and maintains the\r\n * state of the entire program.\r\n */\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    if(sessionStorage.getItem(\"loggedIn\") === null) {\r\n      sessionStorage.setItem(\"loggedIn\", \"\");\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn: sessionStorage.getItem(\"loggedIn\"),\r\n      users: usersData,\r\n      classes: classesData,\r\n      inHouseServices: inHouseServicesData,\r\n      externalServices: externalServicesData,\r\n      employees: employeesData,\r\n      volunteers: volunteersData\r\n    };\r\n\r\n    this.handleLogIn = this.handleLogIn.bind(this);\r\n    this.handleLogOut = this.handleLogOut.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Saves the state that the user with the specified username is logged in.\r\n   * @param {String} username The logged in user's unique username\r\n   */\r\n  handleLogIn(username) {\r\n    sessionStorage.setItem(\"loggedIn\", username);\r\n    this.setState({\r\n      loggedIn: username\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Logs out the logged in user by setting all logged in related values to default.\r\n   */\r\n  handleLogOut() {\r\n    sessionStorage.setItem(\"loggedIn\", \"\");\r\n    this.setState({\r\n      loggedIn: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let username = this.state.loggedIn;\r\n    let user = this.state.users.find(usr => {\r\n      return (usr.username === username);\r\n    });\r\n\r\n    return (\r\n      <div id=\"content-container\">\r\n        <Header isLoggedIn={this.state.loggedIn !== \"\"} handleLogOut={this.handleLogOut}/>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/account\"\r\n            render={(props) => \r\n              <Account {...props} user={user} isLoggedIn={this.state.loggedIn !== \"\"} \r\n            />}\r\n          />\r\n          <Route exact path=\"/account/enrolled-classes\" render={(props) => \r\n              <ViewEnrolledClasses \r\n                {...props} \r\n                user={user} \r\n                classes={this.state.classes} \r\n                isLoggedIn={this.state.loggedIn !== \"\"} \r\n            />}\r\n          />\r\n          <Route exact path=\"/account/requested-services\" render={(props) =>          \r\n              <ViewRequestedServices \r\n                    {...props} \r\n                    user={user} \r\n                    inHouseServices={this.state.inHouseServices}\r\n                    externalServices={this.state.externalServices} \r\n                    isLoggedIn={this.state.loggedIn !== \"\"} \r\n                />}\r\n            />\r\n          <Route exact path=\"/donate\" \r\n            render={(props) => \r\n              <Donate {...props} isLoggedIn={this.state.loggedIn !== \"\"} \r\n            />}\r\n          />\r\n          <Route exact path=\"/login\" \r\n            render={(props) => <Login \r\n                {...props} \r\n                users={this.state.users}  \r\n                handleLogIn={this.handleLogIn} \r\n              />\r\n            }\r\n          />\r\n          <Route exact path=\"/manager-account\" component={ManagerAccount} />\r\n          <Route exact path=\"/manager-account/manage-services\" \r\n            render={(props) => <ManageServices \r\n                {...props} \r\n                classes={this.state.classes}  \r\n                inHouse={this.state.inHouseServices}\r\n                external={this.state.externalServices} \r\n              />\r\n            }\r\n          />\r\n          <Route exact path=\"/manager-account/manage-employees\" \r\n            render={(props) => <ManageEmployees \r\n                {...props} \r\n                employees={this.state.employees}  \r\n              />\r\n            }\r\n          />\r\n          <Route exact path=\"/manager-account/manage-volunteers\" \r\n            render={(props) => <ManageVolunteers\r\n                {...props} \r\n                volunteers={this.state.volunteers}  \r\n              />\r\n            }\r\n          />\r\n          <Route exact path=\"/register\" \r\n            render={(props) => <Register \r\n              {...props} \r\n              handleLogIn={this.handleLogIn} \r\n            />\r\n            }\r\n          />\r\n          <Route exact path=\"/services\" \r\n            render={(props) => \r\n              <Services {...props} \r\n                isLoggedIn={this.state.loggedIn !== \"\"} \r\n                classes={this.state.classes}\r\n                inHouse={this.state.inHouseServices}\r\n                external={this.state.externalServices}\r\n            />}\r\n          />\r\n          <Route exact path=\"/volunteer-account\" \r\n            render={(props) => <VolunteerAccount\r\n                {...props} \r\n                volunteer={this.state.volunteers[0]}  \r\n              />\r\n            }\r\n          />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n        <Footer isLoggedIn={this.state.loggedIn !== \"\"} handleLogOut={this.handleLogOut}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={`${process.env.PUBLIC_URL}`}>\r\n        <App /> \r\n    </BrowserRouter>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}